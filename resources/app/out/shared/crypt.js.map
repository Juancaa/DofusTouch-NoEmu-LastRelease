{"version":3,"sources":["../src/shared/crypt.ts"],"names":[],"mappings":";;AAAA,IAAI,MAAW,CAAC;AAEhB,IAAI,CAAC;IACD,MAAM,GAAS,MAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACjD,CAAC;AAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACb,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,CAAC;AACD,MAAM,SAAS,GAAG,aAAa,CAAC;AAEhC;IAEW,MAAM,CAAC,OAAO,CAAC,IAAY,EAAE,QAAgB;QAChD,IAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA;QACrD,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;QAChD,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,IAAY,EAAE,QAAgB;QAChD,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA;QACzD,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;QAC9C,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,IAAY;QACjC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;CAEJ;AApBD,sBAoBC","file":"crypt.js","sourcesContent":["let crypto: any;\n\ntry {\n    crypto = (<any>global).nodeRequire('crypto');\n} catch (error) {\n    crypto = require('crypto');\n}\nconst algorithm = 'aes-256-ctr';\n\nexport class Crypt {\n\n    public static encrypt(text: string, password: string){\n        var cipher = crypto.createCipher(algorithm, password)\n        var crypted = cipher.update(text, 'utf8', 'hex')\n        crypted += cipher.final('hex');\n        return crypted;\n    }\n\n    public static decrypt(text: string, password: string){\n        var decipher = crypto.createDecipher(algorithm, password)\n        var dec = decipher.update(text, 'hex', 'utf8')\n        dec += decipher.final('utf8');\n        return dec;\n    }\n\n    public static createHash(text: string) {\n        return crypto.createHash('md5').update(text).digest(\"hex\");\n    }\n\n}"]}