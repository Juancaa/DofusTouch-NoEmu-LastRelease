{"version":3,"sources":["../src/browser/shared/electron/ipcrenderer.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,wCAAiD;AAEjD,MAAM,EAAE,WAAW,EAAE,GAAS,MAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AAG9D,IAAa,kBAAkB,GAA/B;IAGC,YACe,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QAHnB,iBAAY,GAAG,WAAW,CAAC;IAI7B,CAAC;IAEA,EAAE,CAAC,OAAc,EAAE,QAAa;QACtC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAY,EAAE,IAAQ;YAGlD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACV,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACV,CAAC;IAEM,cAAc,CAAC,OAAe,EAAE,QAAY;QAClD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAEM,kBAAkB,CAAC,OAAe;QACxC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAEM,IAAI,CAAC,OAAc,EAAE,GAAG,IAAgB;QAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAEM,QAAQ,CAAC,OAAc,EAAE,GAAG,IAAgB;QAClD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;CACD,CAAA;AAhCY,kBAAkB;IAD9B,iBAAU,EAAE;qCAKS,aAAM;GAJf,kBAAkB,CAgC9B;AAhCY,gDAAkB","file":"ipcrenderer.service.js","sourcesContent":["import {Injectable, NgZone} from '@angular/core';\n\nconst { ipcRenderer } = (<any>global).nodeRequire('electron');\n\n@Injectable()\nexport class IpcRendererService {\n\tprivate _ipcRenderer = ipcRenderer;\n\n\tconstructor(\n        private zone: NgZone\n    ) {}\n\n\tpublic on(channel:string, callback: any) {\n\t\treturn this._ipcRenderer.on(channel, (event: Event, args:any)=>{\n\n            // prevent that change is effectiv for zone.js because ipc run not under controll of zone.js\n            this.zone.run(() => {\n                callback(event, args);\n            });\n        });\n\t}\n\n\tpublic removeListener(channel: string, listener:any){\n\t\treturn this._ipcRenderer.removeListener(channel, listener);\n\t}\n\n\tpublic removeAllListeners(channel?:string) {\n\t\treturn this._ipcRenderer.removeAllListeners(channel);\n\t}\n\n\tpublic send(channel:string, ...args: Array<any>) {\n\t\tthis._ipcRenderer.send(channel, args);\n\t}\n\n\tpublic sendSync(channel:string, ...args: Array<any>) {\n\t\treturn this._ipcRenderer.sendSync(channel, args);\n\t}\n}\n"]}