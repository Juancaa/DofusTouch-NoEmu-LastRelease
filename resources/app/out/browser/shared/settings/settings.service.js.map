{"version":3,"sources":["../src/browser/shared/settings/settings.service.ts"],"names":[],"mappings":"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","file":"settings.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {IpcRendererService} from \"../electron/ipcrenderer.service\";\n\nconst settings = (<any>global).nodeRequire('electron-settings');\n\nexport class Option {\n    public general: Option.General;\n    public shortcuts: Option.Shortcuts;\n    public notification: Option.Notification;\n    public vip: Option.VIP;\n\n    constructor(private ipcRendererService: IpcRendererService) {\n        this.general = new Option.General(ipcRendererService);\n        this.shortcuts = new Option.Shortcuts(ipcRendererService);\n        this.notification = new Option.Notification(ipcRendererService);\n        this.vip = new Option.VIP(ipcRendererService);\n    }\n}\n\nexport module Option {\n\n    export class Shortcuts {\n        public no_emu: Shortcuts.NoEmu;\n        public diver: Shortcuts.Diver;\n        public interface: Shortcuts.Interface;\n        private _spell: Array<string>;\n        private _item: Array<string>;\n\n        constructor(private ipcRendererService: IpcRendererService) {\n            this.no_emu = new Shortcuts.NoEmu(ipcRendererService);\n            this.diver = new Shortcuts.Diver(ipcRendererService);\n            this.interface = new Shortcuts.Interface(ipcRendererService);\n            this._spell = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.spell');\n            this._item = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.item');\n        }\n\n\n        get spell(): Array<string> {\n            let self = this;\n            return new Proxy(this._spell, {\n                get: function (target: any, name: any) {\n                    return target[name];\n                },\n                set(target: any, prop: string, value: any) {\n                    target[prop] = value;\n                    self.ipcRendererService.send('write-settings', 'option.shortcuts.spell', target);\n                    return true;\n                }\n            });\n        }\n\n        set spell(spell: Array<string>) {\n            this.ipcRendererService.send('write-settings', 'option.shortcuts.spell', spell);\n            this._spell = spell;\n        }\n\n        get item(): Array<string> {\n            let self = this;\n            return new Proxy(this._item, {\n                get: function (target, name) {\n                    return target[name];\n                },\n                set(target, prop: string, value) {\n                    target[prop] = value;\n                    self.ipcRendererService.send('write-settings', 'option.shortcuts.item', target);\n                    return true;\n                }\n            });\n        }\n\n        set item(item: Array<string>) {\n            this.ipcRendererService.send('write-settings', 'option.shortcuts.item', item);\n            this._item = item;\n        }\n    }\n\n    export module Shortcuts {\n\n        export class Interface {\n            private _carac: string;\n            private _spell: string;\n            private _bag: string;\n            private _bidhouse: string;\n            private _map: string;\n            private _friend: string;\n            private _book: string;\n            private _guild: string;\n            private _conquest: string;\n            private _job: string;\n            private _alliance: string;\n            private _mount: string;\n            private _directory: string;\n            private _alignement: string;\n            private _bestiary: string;\n            private _title: string;\n            private _achievement: string;\n            private _almanax: string;\n            private _spouse: string;\n            private _shop: string;\n            private _goultine: string;\n\n            get carac(): string {\n                return this._carac;\n            }\n\n            set carac(carac: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.carac', carac);\n                this._carac = carac;\n            }\n\n            get spell(): string {\n                return this._spell;\n            }\n\n            set spell(spell: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.spell', spell);\n                this._spell = spell;\n            }\n\n            get bag(): string {\n                return this._bag;\n            }\n\n            set bag(bag: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.bag', bag);\n                this._bag = bag;\n            }\n\n            get bidhouse(): string {\n                return this._bidhouse;\n            }\n\n            set bidhouse(bidhouse: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.bidhouse', bidhouse);\n                this._bidhouse = bidhouse;\n            }\n\n            get map(): string {\n                return this._map;\n            }\n\n            set map(map: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.map', map);\n                this._map = map;\n            }\n\n            get friend(): string {\n                return this._friend;\n            }\n\n            set friend(friend: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.friend', friend);\n                this._friend = friend;\n            }\n\n            get book(): string {\n                return this._book;\n            }\n\n            set book(book: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.book', book);\n                this._book = book;\n            }\n\n            get guild(): string {\n                return this._guild;\n            }\n\n            set guild(guild: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.guild', guild);\n                this._guild = guild;\n            }\n\n            get conquest(): string {\n                return this._conquest;\n            }\n\n            set conquest(conquest: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.conquest', conquest);\n                this._conquest = conquest;\n            }\n\n            get job(): string {\n                return this._job;\n            }\n\n            set job(job: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.job', job);\n                this._job = job;\n            }\n\n            get alliance(): string {\n                return this._alliance;\n            }\n\n            set alliance(alliance: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.alliance', alliance);\n                this._alliance = alliance;\n            }\n\n            get mount(): string {\n                return this._mount;\n            }\n\n            set mount(mount: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.mount', mount);\n                this._mount = mount;\n            }\n\n            get directory(): string {\n                return this._directory;\n            }\n\n            set directory(directory: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.directory', directory);\n                this._directory = directory;\n            }\n\n            get alignement(): string {\n                return this._alignement;\n            }\n\n            set alignement(alignement: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.alignement', alignement);\n                this._alignement = alignement;\n            }\n\n            get bestiary(): string {\n                return this._bestiary;\n            }\n\n            set bestiary(bestiary: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.bestiary', bestiary);\n                this._bestiary = bestiary;\n            }\n\n            get title(): string {\n                return this._title;\n            }\n\n            set title(title: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.title', title);\n                this._title = title;\n            }\n\n            get achievement(): string {\n                return this._achievement;\n            }\n\n            set achievement(achievement: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.achievement', achievement);\n                this._achievement = achievement;\n            }\n\n            get almanax(): string {\n                return this._almanax;\n            }\n\n            set almanax(almanax: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.almanax', almanax);\n                this._almanax = almanax;\n            }\n\n            get spouse(): string {\n                return this._spouse;\n            }\n\n            set spouse(spouse: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.spouse', spouse);\n                this._spouse = spouse;\n            }\n\n            get shop(): string {\n                return this._shop;\n            }\n\n            set shop(shop: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.shop', shop);\n                this._shop = shop;\n            }\n\n            get goultine(): string {\n                return this._goultine;\n            }\n\n            set goultine(goultine: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.interface.goultine', goultine);\n                this._goultine = goultine;\n            }\n\n            public getAll(): Array<any> {\n                let tab: Array<any> = [];\n\n                for (let prop in this) {\n                    let newProp = prop.replace('_', '');\n                    tab.push({\n                        key: newProp,\n                        value: this[prop]\n                    });\n                }\n\n                return tab;\n            }\n\n            constructor(private ipcRendererService: IpcRendererService) {\n                this._carac = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.carac');\n                this._spell = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.spell');\n                this._bag = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.bag');\n                this._bidhouse = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.bidhouse');\n                this._map = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.map');\n                this._friend = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.friend');\n                this._book = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.book');\n                this._guild = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.guild');\n                this._conquest = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.conquest');\n                this._job = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.job');\n                this._alliance = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.alliance');\n                this._mount = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.mount');\n                this._directory = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.directory');\n                this._alignement = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.alignement');\n                this._bestiary = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.bestiary');\n                this._title = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.title');\n                this._achievement = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.achievement');\n                this._almanax = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.almanax');\n                this._spouse = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.spouse');\n                this._shop = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.shop');\n                this._goultine = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.interface.goultine');\n            }\n        }\n\n        export class NoEmu {\n            private _new_tab: string;\n            private _new_window: string;\n            private _next_tab: string;\n            private _prev_tab: string;\n            private _activ_tab: string;\n            private _tabs: Array<string>;\n\n            get new_tab(): string {\n                return this._new_tab;\n            }\n\n            set new_tab(new_tab: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.no_emu.new_tab', new_tab);\n                this._new_tab = new_tab;\n            }\n\n            get new_window(): string {\n                return this._new_window;\n            }\n\n            set new_window(new_window: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.no_emu.new_window', new_window);\n                this._new_window = new_window;\n            }\n\n            get next_tab(): string {\n                return this._next_tab;\n            }\n\n            set next_tab(next_tab: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.no_emu.next_tab', next_tab);\n                this._next_tab = next_tab;\n            }\n\n            get prev_tab(): string {\n                return this._prev_tab;\n            }\n\n            set prev_tab(prev_tab: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.no_emu.prev_tab', prev_tab);\n                this._prev_tab = prev_tab;\n            }\n\n            get activ_tab(): string {\n                return this._activ_tab;\n            }\n\n            set activ_tab(activ_tab: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.no_emu.activ_tab', activ_tab);\n                this._activ_tab = activ_tab;\n            }\n\n            get tabs(): Array<string> {\n                let self = this;\n                return new Proxy(this._tabs, {\n                    get: function (target: any, name: any) {\n                        return target[name];\n                    },\n                    set(target: any, prop: string, value: any) {\n                        target[prop] = value;\n                        self.ipcRendererService.send('write-settings', 'option.shortcuts.no_emu.tabs', target);\n                        return true;\n                    }\n                });\n            }\n\n            set tabs(tabs: Array<string>) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.no_emu.tabs', tabs);\n                this._tabs = tabs;\n            }\n\n            constructor(private ipcRendererService: IpcRendererService) {\n                this.new_tab = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.no_emu.new_tab');\n                this.new_window = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.no_emu.new_window');\n                this.next_tab = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.no_emu.next_tab');\n                this.prev_tab = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.no_emu.prev_tab');\n                this.activ_tab = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.no_emu.activ_tab');\n                this.tabs = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.no_emu.tabs');\n            }\n        }\n\n        export class Diver {\n            private _end_turn: string;\n            private _open_chat: string;\n\n            get end_turn(): string {\n                return this._end_turn;\n            }\n\n            set end_turn(end_turn: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.diver.end_turn', end_turn);\n                this._end_turn = end_turn;\n            }\n\n            get open_chat(): string {\n                return this._open_chat;\n            }\n\n            set open_chat(open_chat: string) {\n                this.ipcRendererService.send('write-settings', 'option.shortcuts.diver.open_chat', open_chat);\n                this._open_chat = open_chat;\n            }\n\n            constructor(private ipcRendererService: IpcRendererService) {\n                this.end_turn = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.diver.end_turn');\n                this.open_chat = this.ipcRendererService.sendSync('read-settings', 'option.shortcuts.diver.open_chat');\n            }\n        }\n    }\n\n    export class General {\n\n        private _hidden_shop: boolean;\n        private _hidden_tabs: boolean;\n        private _resolution: {\n            x: boolean;\n            y: boolean;\n        };\n        private _local_content: boolean;\n\n        get hidden_shop(): boolean {\n            return this._hidden_shop;\n        }\n\n        set hidden_shop(hidden_shop: boolean) {\n            this.ipcRendererService.send('write-settings', 'option.general.hidden_shop', hidden_shop);\n            this._hidden_shop = hidden_shop;\n        }\n\n        get hidden_tabs(): boolean {\n            return this._hidden_tabs;\n        }\n\n        set hidden_tabs(hidden_tabs: boolean) {\n            this.ipcRendererService.send('write-settings', 'option.general.hidden_tabs', hidden_tabs);\n            this._hidden_tabs = hidden_tabs;\n        }\n\n        get resolution() {\n            return this._resolution;\n        }\n\n        set resolution(resolution: any) {\n            this.ipcRendererService.send('write-settings', 'option.general.resolution', resolution);\n            this._resolution = resolution;\n        }\n\n        get local_content() {\n            return this._local_content;\n        }\n\n        set local_content(local_content: boolean) {\n            this.ipcRendererService.send('write-settings', 'option.general.local_content', local_content);\n            this._local_content = local_content;\n        }\n\n        constructor(private ipcRendererService: IpcRendererService) {\n            this.hidden_shop = this.ipcRendererService.sendSync('read-settings', 'option.general.hidden_shop');\n            this.hidden_tabs = this.ipcRendererService.sendSync('read-settings', 'option.general.hidden_tabs');\n            this.resolution = this.ipcRendererService.sendSync('read-settings', 'option.general.resolution');\n            this.local_content = this.ipcRendererService.sendSync('read-settings', 'option.general.local_content');\n        }\n    }\n\n    export class Notification {\n        private _private_message: boolean;\n        private _fight_turn: boolean;\n        private _tax_collector: boolean;\n        private _kolizeum: boolean;\n        private _party_invitation: boolean;\n        private _aggression: boolean;\n        private _focus_fight_turn: boolean;\n\n        get private_message() {\n            return this._private_message;\n        }\n\n        set private_message(private_message: any) {\n            this.ipcRendererService.send('write-settings', 'option.notification.private_message', private_message);\n            this._private_message = private_message;\n        }\n\n        get fight_turn() {\n            return this._fight_turn;\n        }\n\n        set fight_turn(fight_turn: any) {\n            this.ipcRendererService.send('write-settings', 'option.notification.fight_turn', fight_turn);\n            this._fight_turn = fight_turn;\n        }\n\n        get tax_collector() {\n            return this._tax_collector;\n        }\n\n        set tax_collector(tax_collector: any) {\n            this.ipcRendererService.send('write-settings', 'option.notification.tax_collector', tax_collector);\n            this._tax_collector = tax_collector;\n        }\n\n        get kolizeum() {\n            return this._kolizeum;\n        }\n\n        set kolizeum(kolizeum: any) {\n            this.ipcRendererService.send('write-settings', 'option.notification.kolizeum', kolizeum);\n            this._kolizeum = kolizeum;\n        }\n\n        get party_invitation() {\n            return this._party_invitation;\n        }\n\n        set party_invitation(party_invitation: any) {\n            this.ipcRendererService.send('write-settings', 'option.notification.party_invitation', party_invitation);\n            this._party_invitation = party_invitation;\n        }\n\n        get aggression() {\n            return this._aggression;\n        }\n\n        set aggression(aggression: any) {\n            this.ipcRendererService.send('write-settings', 'option.notification.aggression', aggression);\n            this._aggression = aggression;\n        }\n\n        get focus_fight_turn() {\n            return this._focus_fight_turn;\n        }\n\n        set focus_fight_turn(focus_fight_turn: any) {\n            this.ipcRendererService.send('write-settings', 'option.notification.focus_fight_turn', focus_fight_turn);\n            this._focus_fight_turn = focus_fight_turn;\n        }\n\n        constructor(private ipcRendererService: IpcRendererService) {\n            this.fight_turn = this.ipcRendererService.sendSync('read-settings', 'option.notification.fight_turn');\n            this.private_message = this.ipcRendererService.sendSync('read-settings', 'option.notification.private_message');\n            this.tax_collector = this.ipcRendererService.sendSync('read-settings', 'option.notification.tax_collector');\n            this.kolizeum = this.ipcRendererService.sendSync('read-settings', 'option.notification.kolizeum');\n            this.party_invitation = this.ipcRendererService.sendSync('read-settings', 'option.notification.party_invitation');\n            this.aggression = this.ipcRendererService.sendSync('read-settings', 'option.notification.aggression');\n            this.focus_fight_turn = this.ipcRendererService.sendSync('read-settings', 'option.notification.focus_fight_turn');\n        }\n    }\n\n    export class VIP {\n        public general: VIP.General;\n        public autogroup: VIP.AutoGroup;\n        public multiaccount: VIP.MultiAccount;\n\n        constructor(private ipcRendererService: IpcRendererService) {\n            this.general = new VIP.General(ipcRendererService);\n            this.autogroup = new VIP.AutoGroup(ipcRendererService);\n            this.multiaccount = new VIP.MultiAccount(ipcRendererService);\n        }\n    }\n\n    export module VIP {\n        export class General {\n            private _disable_inactivity: boolean;\n            private _health_bar: boolean;\n            private _health_bar_shortcut: string;\n            private _estimator: boolean;\n\n            get estimator(): boolean {\n                return this._estimator;\n            }\n\n            set estimator(estimator: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.general.estimator', estimator);\n                this._estimator = estimator;\n            }\n\n            get disable_inactivity(): boolean {\n                return this._disable_inactivity;\n            }\n\n            set disable_inactivity(disable_inactivity: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.general.disable_inactivity', disable_inactivity);\n                this._disable_inactivity = disable_inactivity;\n            }\n\n            get health_bar(): boolean {\n                return this._health_bar;\n            }\n\n            set health_bar(health_bar: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.general.health_bar', health_bar);\n                this._health_bar = health_bar;\n            }\n\n            get health_bar_shortcut(): string {\n                return this._health_bar_shortcut;\n            }\n\n            set health_bar_shortcut(health_bar_shortcut: string) {\n                this.ipcRendererService.send('write-settings', 'option.vip.general.health_bar_shortcut', health_bar_shortcut);\n                this._health_bar_shortcut = health_bar_shortcut;\n            }\n\n            constructor(private ipcRendererService: IpcRendererService) {\n                this.disable_inactivity = this.ipcRendererService.sendSync('read-settings', 'option.vip.general.disable_inactivity');\n                this.health_bar = this.ipcRendererService.sendSync('read-settings', 'option.vip.general.health_bar');\n                this.health_bar_shortcut = this.ipcRendererService.sendSync('read-settings', 'option.vip.general.health_bar_shortcut');\n                this.estimator = this.ipcRendererService.sendSync('read-settings', 'option.vip.general.estimator');\n            }\n        }\n\n        export class AutoGroup {\n            private _active: boolean;\n            private _leader: string;\n            private _members: string;\n            private _follow_leader: boolean;\n            private _ready: boolean;\n            private _delay: number;\n            private _fight: boolean;\n            private _random_move: boolean;\n\n            get active(): boolean {\n                return this._active;\n            }\n\n            set active(active: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.active', active);\n                this._active = active;\n            }\n\n            get leader(): string {\n                return this._leader;\n            }\n\n            set leader(leader: string) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.leader', leader);\n                this._leader = leader;\n            }\n\n            get members(): string {\n                return this._members;\n            }\n\n            set members(members: string) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.members', members);\n                this._members = members;\n            }\n\n            get follow_leader(): boolean {\n                return this._follow_leader;\n            }\n\n            set follow_leader(follow_leader: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.follow_leader', follow_leader);\n                this._follow_leader = follow_leader;\n            }\n\n            get ready(): boolean {\n                return this._ready;\n            }\n\n            set ready(ready: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.ready', ready);\n                this._ready = ready;\n            }\n\n            get delay(): number {\n                return this._delay;\n            }\n\n            set delay(delay: number) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.delay', delay);\n                this._delay = delay;\n            }\n\n            get fight(): boolean {\n                return this._fight;\n            }\n\n            set fight(fight: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.fight', fight);\n                this._fight = fight;\n            }\n\n            get random_move(): boolean {\n                return this._random_move;\n            }\n\n            set random_move(random_move: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.auto_group.random_move', random_move);\n                this._random_move = random_move;\n            }\n\n            constructor(private ipcRendererService: IpcRendererService) {\n                this.active = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.active');\n                this.leader = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.leader');\n                this.members = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.members');\n                this.follow_leader = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.follow_leader');\n                this.leader = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.leader');\n                this.ready = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.ready');\n                this.delay = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.delay');\n                this.fight = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.fight');\n                this.random_move = this.ipcRendererService.sendSync('read-settings', 'option.vip.auto_group.random_move');\n            }\n        }\n\n        export class MultiAccount {\n            private _active: boolean;\n            private _master_password: string;\n            private _windows: {account_name_encrypted: string, password_encrypted: string}[][];\n\n            get active(): boolean {\n                return this._active;\n            }\n\n            set active(active: boolean) {\n                this.ipcRendererService.send('write-settings', 'option.vip.multi_account.active', active);\n                this._active = active;\n            }\n\n            get master_password(): string {\n                return this._master_password;\n            }\n\n            set master_password(active: string) {\n                this.ipcRendererService.send('write-settings', 'option.vip.multi_account.master_password', active);\n                this._master_password = active;\n            }\n\n            get windows(): {account_name_encrypted: string, password_encrypted: string}[][] {\n                return this._windows;\n            }\n\n            set windows(windows: {account_name_encrypted: string, password_encrypted: string}[][]) {\n                this.ipcRendererService.send('write-settings', 'option.vip.multi_account.windows', windows);\n                this._windows = windows;\n            }\n\n            constructor(private ipcRendererService: IpcRendererService) {\n                this.active = this.ipcRendererService.sendSync('read-settings', 'option.vip.multi_account.active');\n                this.master_password = this.ipcRendererService.sendSync('read-settings', 'option.vip.multi_account.master_password');\n                this.windows = this.ipcRendererService.sendSync('read-settings', 'option.vip.multi_account.windows');\n            }\n        }\n    }\n}\n\n\n@Injectable()\nexport class SettingsService {\n\n    public option: Option;\n\n    private _buildVersion: string;\n    private _appVersion: string;\n    private _alertCounter: number;\n    private _language: string;\n    private _vip_id: string;\n    private _last_news: number;\n\n    get last_news(): number {\n        return this._last_news;\n    }\n\n    set last_news(last_news: number) {\n        this.ipcRendererService.send('write-settings', 'last_news', last_news);\n        this._last_news = last_news;\n    }\n\n    get vip_id(): string {\n        return this._vip_id;\n    }\n\n    set vip_id(vip_id: string) {\n        this.ipcRendererService.send('write-settings', 'vip_id', vip_id);\n        this._vip_id = vip_id;\n    }\n\n    get alertCounter(): number {\n        return this._alertCounter;\n    }\n\n    set alertCounter(alertCounter: number) {\n        this.ipcRendererService.send('write-settings', 'alertCounter', alertCounter);\n        this._alertCounter = alertCounter;\n    }\n\n    get buildVersion(): string {\n        return this._buildVersion;\n    }\n\n    set buildVersion(buildVersion: string) {\n        this.ipcRendererService.send('write-settings', 'buildVersion', buildVersion);\n        this._buildVersion = buildVersion;\n    }\n\n    get appVersion(): string {\n        return this._appVersion;\n    }\n\n    set appVersion(appVersion: string) {\n        this.ipcRendererService.send('write-settings', 'appVersion', appVersion);\n        this._appVersion = appVersion;\n    }\n\n    get language(): string {\n        return this._language;\n    }\n\n    set language(language: string) {\n        this.ipcRendererService.send('write-settings', 'language', language);\n        this._language = language;\n    }\n\n\n\n\n    constructor(private ipcRendererService: IpcRendererService) {\n\n        let init = () => {\n            this.option = new Option(ipcRendererService);\n\n            this._appVersion = this.ipcRendererService.sendSync('read-settings', 'appVersion');\n            this._buildVersion = this.ipcRendererService.sendSync('read-settings', 'buildVersion');\n            this._alertCounter = this.ipcRendererService.sendSync('read-settings', 'alertCounter');\n            this._language = this.ipcRendererService.sendSync('read-settings', 'language');\n            this._vip_id = this.ipcRendererService.sendSync('read-settings', 'vip_id');\n            this._last_news = this.ipcRendererService.sendSync('read-settings', 'last_news');\n        };\n        init();\n\n        this.ipcRendererService.on('reload-settings', () => {\n            console.log('receive->reload-settings');\n            init();\n            console.log('emit->reload-settings-done');\n            this.ipcRendererService.send('reload-settings-done');\n        });\n    }\n}\n"]}