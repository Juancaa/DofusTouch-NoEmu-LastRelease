{"version":3,"sources":["../src/browser/app/option/general/general.component.ts"],"names":[],"mappings":"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","file":"general.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from './../../../shared/settings/settings.service';\nimport { TranslateService } from \"ng2-translate\";\nimport { PromptService } from \"../../../shared/utils/prompt.service\";\n\ninterface select {\n    name: string;\n    value: string;\n}\n\n@Component({\n    selector: 'option-general',\n    templateUrl: 'app/option/general/general.component.html',\n    styleUrls: ['app/option/general/general.component.css'],\n    host: {\n\n    }\n})\nexport class GeneralComponent implements OnInit {\n\n    private _resolution: string;\n    private _language: string;\n    public resolutions: select[] = [\n        { name: '800x600', value: \"800;600\" },\n        { name: '960x540', value: \"960;540\" },\n        { name: '1280x720', value: \"1280;720\" },\n        { name: '1024x768', value: \"1024;768\" },\n        { name: '1366x768', value: \"1366;768\" },\n        { name: '1440x900', value: \"1440;900\" },\n        { name: '1600x900', value: \"1600;900\" },\n        { name: '1280x1024', value: \"1280;1024\" },\n        { name: '1680x1050', value: \"1680;1050\" },\n        { name: '1920x1080', value: \"1920;1080\" },\n        { name: '2560x1440', value: \"2560;1440\" }\n    ];\n\n    public languages: select[] = [\n        { name: 'Fran√ßais', value: \"fr\" },\n        { name: 'English', value: \"en\" },\n        { name: 'Espagnol', value: \"es\" }\n    ];\n\n    constructor(\n        private translate: TranslateService,\n        private settingsService: SettingsService,\n        private promptService: PromptService\n    ) { }\n\n    ngOnInit(): void {\n        // fixe the two way binding object by this tricks\n        this._resolution = this.settingsService.option.general.resolution.x + ';' + this.settingsService.option.general.resolution.y;\n        this._language = this.settingsService.language;\n    }\n\n    public setLanguage(): void {\n        this.translate.use(this._language);\n        this.settingsService.language = this._language;\n    }\n\n    public setResolution(value: string): void {\n\n        let aValue = value.split(';');\n\n        let resolution = {\n            x: parseInt(aValue[0]),\n            y: parseInt(aValue[1])\n        };\n\n        if (this.settingsService.option.general.resolution != resolution) {\n            this.promptService.info({ html: this.translate.instant(\"app.option.prompt.change-resolution.text\") });\n        }\n\n        this.settingsService.option.general.resolution = resolution;\n    }\n}\n"]}