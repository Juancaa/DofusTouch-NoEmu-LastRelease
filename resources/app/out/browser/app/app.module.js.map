{"version":3,"sources":["../src/browser/app/app.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,wCAAyC;AACzC,wCAA0C;AAC1C,gEAA0D;AAC1D,4CAAgD;AAChD,6DAAuD;AACvD,iDAAwF;AACxF,0EAAqE;AACrE,2DAAuD;AACvD,mDAA+C;AAC/C,+CAAwC;AACxC,wCAAqC;AA8BrC,IAAa,SAAS,GAAtB;CACC,CAAA;AADY,SAAS;IA3BrB,eAAQ,CAAC;QACN,OAAO,EAAE;YACL,gCAAa;YACb,4BAAY,CAAC,OAAO,EAAE;YACtB,wBAAS,CAAC,OAAO,EAAE;YACnB,+BAAe,CAAC,OAAO,CAAC;gBACpB,OAAO,EAAE,+BAAe;gBACxB,UAAU,EAAE,CAAC,IAAU,KAAK,IAAI,qCAAqB,CAAC,IAAI,EAAE,oBAAoB,EAAE,OAAO,CAAC;gBAC1F,IAAI,EAAE,CAAC,WAAI,CAAC;aACf,CAAC;YACF,qBAAO;SACV;QACD,YAAY,EAAE;YACV,4BAAY;SACf;QACD,SAAS,EAAE;YACP,EAAE,OAAO,EAAE,sBAAa,EAAE,QAAQ,EAAE,GAAG,EAAE;YACzC;gBACI,OAAO,EAAE,gBAAS;gBAClB,IAAI,EAAE,CAAC,kCAAe,CAAC;gBACvB,UAAU,EAAE,UAAS,OAAyB;oBAC1C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAC5B,CAAC;aACJ;SACJ;QACD,SAAS,EAAE,CAAC,4BAAY,CAAC;KAC5B,CAAC;GACW,SAAS,CACrB;AADY,8BAAS","file":"app.module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { APP_BASE_HREF } from \"@angular/common\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TranslateModule, TranslateLoader, TranslateStaticLoader } from \"ng2-translate\";\nimport { SettingsService } from \"../shared/settings/settings.service\"\nimport { SharedModule } from '../shared/shared.module';\nimport { AppComponent } from './app.component';\nimport { routing } from './app.routing';\nimport { Http } from \"@angular/http\";\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        SharedModule.forRoot(),\n        NgbModule.forRoot(),\n        TranslateModule.forRoot({\n            provide: TranslateLoader,\n            useFactory: (http: Http) => new TranslateStaticLoader(http, '../../i18n/browser', '.json'),\n            deps: [Http]\n        }),\n        routing\n    ],\n    declarations: [\n        AppComponent\n    ],\n    providers: [\n        { provide: APP_BASE_HREF, useValue: '/' }, // hack to work routing on electron\n        {\n            provide: LOCALE_ID,\n            deps: [SettingsService],\n            useFactory: function(setting : SettingsService){\n                return setting.language;\n            }\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n"]}