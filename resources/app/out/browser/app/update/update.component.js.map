{"version":3,"sources":["../src/browser/app/update/update.component.ts"],"names":[],"mappings":"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","file":"update.component.js","sourcesContent":["import {Component, OnInit, NgZone, OnDestroy}      from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs/Subscription';\nimport {IpcRendererService} from \"./../../shared/electron/ipcrenderer.service\";\nimport {Title} from \"@angular/platform-browser\";\nimport {TranslateService} from \"ng2-translate\";\n\n\nconst progress = (<any>global).nodeRequire('request-progress');\nconst request = (<any>global).nodeRequire('request');\nconst fs = (<any>global).nodeRequire('fs');\n\n@Component({\n    moduleId: module.id,\n    selector: 'update',\n    templateUrl: 'update.component.html',\n    styleUrls: ['update.component.css']\n})\nexport class UpdateComponent implements OnInit, OnDestroy {\n\n    private progress: number = 0;\n    private savePath: string;\n    private saveFile: any;\n    private remoteUrl: string;\n    private informations: string;\n    private sub: Subscription;\n\n    constructor(private route: ActivatedRoute,\n                private translate: TranslateService,\n                private zone: NgZone,\n                private ipcRendererService: IpcRendererService,\n                private titleService: Title) {}\n\n    ngOnInit() {\n\n        this.translate.get('update.title').subscribe((res: string) => {\n            this.titleService.setTitle(res);\n        });\n\n        this.translate.get('update.information.start').subscribe((res: string) => {\n            this.informations = res;\n        });\n\n        this.sub = this.route.params.subscribe(params => {\n            // Defaults to 0 if no query param provided.\n            this.savePath = decodeURIComponent(params['savePath']);\n            this.remoteUrl = decodeURIComponent(params['remoteUrl']);\n\n            this.saveFile = fs.createWriteStream(this.savePath);\n\n            this.download();\n        });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    download() {\n        progress(request(this.remoteUrl), {})\n            .on('progress', (state: any) => {\n                this.zone.run(() => {\n                    this.progress = Math.round(state.percent * 100);\n                    this.informations = this.formatUnit(state.size.transferred) + ' / ' + this.formatUnit(state.size.total);\n                });\n            })\n            .on('error', (err: any) => {\n                console.log(err);\n                this.zone.run(() => {\n                    this.translate.get('update.information.error').subscribe((res: string) => {\n                        this.informations = res;\n                    });\n                });\n            })\n            .on('end', () => {\n                this.zone.run(() => {\n                    this.progress = 100;\n                });\n            })\n            .pipe(this.saveFile);\n\n        this.saveFile.addListener('finish', () => {\n            this.zone.run(() => {\n                this.install();\n            });\n        });\n    }\n\n    install() {\n        this.translate.get('update.information.install').subscribe((res: string) => {\n            this.informations = res;\n        });\n\n        // call electron to install the update\n        this.ipcRendererService.send('install-update');\n    }\n\n    formatUnit(count: number): string {\n        if (count >= 1000000) {\n            return (Math.round((count / 1000000) * 100) / 100) + ' Mb';\n        }\n        else if (count >= 1000) {\n            return (Math.round((count / 1000) * 100) / 100) + ' Kb';\n        }\n        else {\n            return (Math.round(count * 100) / 100) + ' B';\n        }\n    }\n}\n"]}