{"version":3,"sources":["../src/browser/app/main/main.service.ts"],"names":[],"mappings":"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","file":"main.service.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {TabService} from \"./tab/tab.service\";\nimport {GameService} from \"./game/game.service\";\nimport {Game} from \"./game/game\";\nimport {Tab} from \"./tab/tab\";\nimport * as async from \"async\";\nimport {ApplicationService} from \"../../shared/electron/application.service\";\nimport {CryptService} from \"../../shared/utils/crypt.service\";\nimport {PromptService} from \"../../shared/utils/prompt.service\";\nimport {TranslateService} from \"ng2-translate\";\n\n@Injectable()\nexport class MainService {\n\n    private seqId: number = 1;\n    public activTab: Tab = null;\n\n    constructor(private gameService: GameService,\n                private tabService: TabService,\n                private promptService: PromptService,\n                private translate: TranslateService,\n                private applicationService: ApplicationService,\n                private crypt: CryptService) {\n\n    }\n\n    public get tabs() {\n        return this.tabService.tabs;\n    }\n\n    public get games() {\n        return this.gameService.games;\n    }\n\n    public addGame(credentials: {account_name: string, password: string} = undefined, cb: any = undefined): void {\n\n        let add = () => {\n            let tab = new Tab(this.seqId++);\n            this.tabService.addTab(tab);\n\n            let game = new Game(tab.id, credentials);\n\n            game.on('character', (name: string) => {\n                tab.character = name;\n            });\n            game.on('logged', (logged: boolean) => {\n                tab.isLogged = logged;\n            });\n            game.on('notification', () => {\n                if (this.activTab.id !== tab.id) {\n                    tab.notification = true;\n                }\n            });\n\n            this.gameService.addGame(game);\n\n            this.selectGame(tab.id);\n\n            if (cb) cb();\n        };\n\n        if (this.gameService.games.length > 5) {\n            this.promptService.confirm({\n                title: this.translate.instant(\"app.prompt.title.confirm\"),//this.translate.instant(\"app.option.prompt.reset-option.text\")\n                html: this.translate.instant(\"app.main.prompt.tabs-overflow.text\"),\n                type: \"warning\"\n            }).then(() => {\n                add();\n            }, (dismiss) => {\n            });\n        } else {\n            add();\n        }\n    }\n\n    // This function will create one tab for each account\n    // @param accounts: Array of encrypted accounts to load\n    addMultiAccountGames(accounts: {account_name_encrypted: string, password_encrypted: string}[]) {\n\n        // If there is no account\n        if (!accounts || accounts.length <= 0) {\n            this.addGame();\n            return;\n        }\n\n        // Decrypt credentials for each accounts\n        // Open Tab for each accounts\n        async.eachSeries(accounts, (account, cb) => {\n            let credentials = {\n                account_name: this.crypt.decrypt(account.account_name_encrypted, this.applicationService.masterpassword),\n                password: this.crypt.decrypt(account.password_encrypted, this.applicationService.masterpassword),\n            };\n\n            this.addGame(credentials, () => {\n                setTimeout(cb, 1500);\n            });\n        }, () => {\n            // Open the last tab\n            this.selectGame(this.seqId - 1);\n        });\n\n    }\n\n    public selectGame(id: number): void {\n\n        console.log(`selectGame ${id}`);\n        // remove old activTab\n        if (this.activTab !== null) {\n            this.activTab.isFocus = false;\n            let oldGame = this.gameService.getGame(this.activTab.id);\n            oldGame.isFocus = false;\n        }\n\n        let tab = this.tabService.getTab(id);\n        let game = this.gameService.getGame(id);\n\n        tab.isFocus = true;\n        tab.notification = false;\n        game.isFocus = true;\n\n        if (tab.isLogged) {\n            game.window.focus();\n        }\n\n\n        this.activTab = tab;\n    }\n\n    public removeGame(id: number): void {\n\n        if (this.activTab !== null && id === this.activTab.id) {\n            this.activTab = null;\n        }\n\n        let tab = this.tabService.getTab(id);\n        let game = this.gameService.getGame(id);\n\n        this.tabService.removeTab(tab);\n        this.gameService.removeGame(game);\n    }\n\n}\n"]}