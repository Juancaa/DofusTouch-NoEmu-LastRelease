{"version":3,"sources":["../src/browser/app/main/game/plugins/appPreferences/appPreferences.ts"],"names":[],"mappings":";;AAAA,MAAM,QAAQ,GAAS,MAAO,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;AAEhE;IACI;IAEA,CAAC;IAEM,KAAK,CAAC,OAAmB,EAAE,IAA0B,EAAE,GAAW,EAAE,KAAa;QACpF,QAAQ,CAAC,GAAG,CAAC,iBAAiB,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC;YAC9C,MAAM,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAU;YAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,KAAK,CAAC,OAA2B,EAAE,IAA0B,EAAE,GAAW;QAC7E,QAAQ,CAAC,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAQ;YAChD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAU;YAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,OAAmB,EAAE,IAAyB,EAAE,GAAW;QACrE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACtB,MAAM,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAS;YAChB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,IAAI,CAAC,OAAmB,EAAE,IAAgB;QAC7C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC;IACvD,CAAC;CACJ;AAhCD,wCAgCC","file":"appPreferences.js","sourcesContent":["const settings = (<any>global).nodeRequire('electron-settings');\n\nexport class AppPreferences {\n    constructor() {\n\n    }\n\n    public store(success: () => void, fail: (err: Error) => void, key: string, value: string) {\n        settings.set('appPreferences.' + key, value).then(() => {\n            return success();\n        }).catch((err: Error) => {\n            return fail(err);\n        });\n    }\n\n    public fetch(success: (val: any) => void, fail: (err: Error) => void, key: string) {\n        settings.get('appPreferences.' + key).then((val: any) => {\n            return success(val);\n        }).catch((err: Error) => {\n            return fail(err);\n        });\n    }\n\n    public remove(success: () => void, fail: (err:Error) => void, key: string) {\n        settings.delete(key).then(() => {\n            return success();\n        }).catch((err:Error) => {\n           return fail(err);\n        });\n    }\n\n    public show(success: () => void, fail: () => void) {\n        return this.fetch(success, fail, 'appPreferences');\n    }\n}"]}