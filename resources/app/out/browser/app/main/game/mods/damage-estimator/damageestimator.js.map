{"version":3,"sources":["../src/browser/app/main/game/mods/damage-estimator/damageestimator.ts"],"names":[],"mappings":"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","file":"damageestimator.js","sourcesContent":["import {Option} from \"../../../../../shared/settings/settings.service\";\nimport {ShortCuts} from \"../../../../shortcuts/shortcuts\";\nimport {DamageContainer} from \"./damagecontainer\";\n\nexport class DamageEstimator {\n\n    private wGame: any | Window;\n    private params: Option.VIP.General\n    private shortcuts: ShortCuts;\n    private damageContainer: DamageContainer;\n    private events: any[];\n\n    constructor(wGame: any, params: Option.VIP.General) {\n        this.wGame = wGame;\n        this.params = params;\n        this.events = [];\n\n        if (this.params.estimator) {\n\n            console.info('- enable Damage-Estimator');\n\n            this.shortcuts = new ShortCuts(this.wGame);\n            this.damageContainer = new DamageContainer(this.wGame);\n\n            //this.removeOnDeath();\n            this.setSpellSelected();\n            this.setSpellSlotDeselected();\n            //this.stopOnFightEnd();\n\n            this.damageContainer.toggle();\n        }\n    }\n\n\n    private removeOnDeath(): void {\n        let onDeath = (e: any) => {\n            try {\n                this.damageContainer.destroyEstimator(e.targetId);\n            } catch (ex) {\n                console.log(ex);\n            }\n        };\n\n        this.wGame.gui.on('GameActionFightDeathMessage', onDeath);\n        this.events.push(() => {\n            this.wGame.gui.removeListener('GameActionFightDeathMessage', onDeath);\n        });\n    }\n\n    private setSpellSlotDeselected(): void {\n\n        let onSpellSlotDeselected = () => {\n            try {\n                console.log('onSpellSlotDeselected');\n                this.damageContainer.destroyEstimators();\n            } catch (ex) {\n                console.log(ex);\n            }\n        };\n        this.wGame.gui.on('spellSlotDeselected', onSpellSlotDeselected);\n        this.events.push(() => {\n            this.wGame.gui.removeListener('spellSlotSelected', onSpellSlotDeselected);\n        });\n    }\n\n    private setSpellSelected(): void {\n        let onSpellSelected = (spellId: number) => {\n            try {\n                console.log('onSpellSelected');\n                let spell = this.wGame.gui.playerData.characters.mainCharacter.spellData.spells[spellId];\n                this.damageContainer.display(spell);\n            } catch (ex) {\n                console.log(ex);\n            }\n        };\n        this.wGame.gui.on('spellSlotSelected', onSpellSelected);\n        this.events.push(() => {\n            this.wGame.gui.removeListener('spellSlotSelected', onSpellSelected);\n        });\n    }\n\n    private stopOnFightEnd(): void {\n        let onFightEnd = (e: any) => {\n            try {\n                this.damageContainer.fightEnded();\n            } catch (ex) {\n                console.log(ex);\n            }\n        };\n\n        this.wGame.dofus.connectionManager.on('GameFightEndMessage', onFightEnd);\n        this.events.push(() => {\n            this.wGame.dofus.connectionManager.removeListener('GameFightEndMessage', onFightEnd);\n        });\n    }\n\n\n    public reset() {\n        if (this.params.estimator) {\n            this.shortcuts.unBindAll();\n            this.damageContainer.destroy();\n            this.events.forEach((event) => {\n                event();\n            });\n            this.events = [];\n        }\n    }\n\n}\n"]}