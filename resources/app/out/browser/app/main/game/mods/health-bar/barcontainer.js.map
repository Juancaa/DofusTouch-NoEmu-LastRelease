{"version":3,"sources":["../src/browser/app/main/game/mods/health-bar/barcontainer.ts"],"names":[],"mappings":"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","file":"barcontainer.js","sourcesContent":["import {Bar} from \"./bar\";\nexport class BarContainer {\n\n    private wGame: any | Window;\n    private container: HTMLDivElement;\n    private displayed: boolean = false;\n    private enabled: boolean = true;\n    private showLifePoints: boolean = true;\n    private isInFight = false;\n    private updateInterval: NodeJS.Timer;\n    private bars: { [fighterId: number]: Bar; } = { };\n\n    constructor(wGame: Window | any) {\n        this.wGame = wGame;\n\n        this.container = document.createElement('div');\n        this.container.id = 'lifeBars';\n        this.container.className = 'lifeBarsContainer';\n\n        this.wGame.foreground.rootElement.appendChild(this.container);\n\n        if (this.wGame.gui.fightManager.isInBattle()) this.fightStarted();\n\n    }\n\n    public toggle() {\n        if (!this.enabled) {\n            this.enabled = true;\n            this.showLifePoints = true;\n        }\n        else {\n            if (this.showLifePoints) this.showLifePoints = false;\n            else this.enabled = false;\n        }\n        if (this.isInFight) {\n            if (this.enabled) this.show();\n            else this.hide();\n        }\n    }\n\n    private show() {\n        if (!this.displayed) {\n            this.displayed = true;\n            this.container.style.visibility = 'visible';\n\n            let fighters = this.wGame.gui.fightManager.getFighters();\n            for (let index in fighters) {\n                let fighter = this.wGame.gui.fightManager.getFighter(fighters[index]);\n                if (fighter.data.alive) {\n                    this.bars[fighter.id] = new Bar(fighter, this, this.wGame);\n                }\n            }\n            this.updateInterval = setInterval(()=>{\n                this.update();\n            }, 400);\n        }\n    }\n\n    public hide() {\n        if (this.displayed) {\n            this.displayed = false;\n            this.container.style.visibility = '';\n            for (let fighterId in this.bars) {\n                this.destroyBar(fighterId);\n            }\n            this.bars = [];\n            this.wGame.document.getElementById('lifeBars').innerHTML = '';\n            clearInterval(this.updateInterval);\n        }\n    }\n\n    private update() {\n        if (this.isInFight) {\n            let fighters = this.wGame.gui.fightManager.getFighters();\n            for (let index in fighters) {\n                let fighter = this.wGame.gui.fightManager.getFighter(fighters[index]);\n                if (fighter.data.alive) {\n                    if (this.bars[fighter.id]) this.bars[fighter.id].update();\n                    else this.bars[fighter.id] = new Bar(fighter, this, this.wGame);\n                }\n            }\n        }\n    }\n\n    public destroyBar(fighterId: any) {\n        if (this.bars[fighterId]) {\n            this.bars[fighterId].destroy();\n            delete this.bars[fighterId];\n        }\n    }\n\n\n    public fightStarted() {\n        this.isInFight = true;\n        if (this.enabled) this.show();\n    }\n\n    public fightEnded() {\n        this.isInFight = false;\n        if (this.enabled) this.hide();\n    }\n\n    public getShowLifePoints(): any {\n        return this.showLifePoints;\n    }\n\n\n    public destroy() {\n        this.hide();\n        this.container.parentElement.removeChild(this.container);\n\n    }\n}\n"]}