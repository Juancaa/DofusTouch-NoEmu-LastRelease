{"version":3,"sources":["../src/browser/app/main/game/mods/damage-estimator/estimator.ts"],"names":[],"mappings":"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","file":"estimator.js","sourcesContent":["interface IEstimation {\n    element: string;\n    max: number;\n    min: number;\n    isHeal: boolean;\n}\n\nexport class Estimator {\n\n    private fighter: any;\n    private spell: any;\n    private wGame: any;\n\n    private estimatorContainer: HTMLDivElement;\n\n    constructor(fighter: any, spell: any, wGame: any | Window) {\n        this.fighter = fighter;\n        this.wGame = wGame;\n        this.spell = spell;\n\n        this.createEstimator();\n    }\n\n    public update(spell: any) {\n        this.spell = spell;\n\n        let fighter = this.wGame.gui.fightManager.getFighter(this.fighter.id);\n\n        if (this.wGame.isoEngine.mapRenderer.isFightMode) {\n\n            if (fighter.data.alive) {\n                if (!this.estimatorContainer ) {\n                    this.createEstimator();\n                }\n\n                let invisible = false;\n                for (let idB in fighter.buffs) {\n                    if (fighter.buffs[idB].effect.effectId == 150)\n                        invisible = true;\n                }\n\n                let cellId = fighter.data.disposition.cellId;\n\n                if (cellId && !invisible) {\n                    let scenePos = this.wGame.isoEngine.mapRenderer.getCellSceneCoordinate(cellId);\n                    let pos = this.wGame.isoEngine.mapScene.convertSceneToCanvasCoordinate(scenePos.x, scenePos.y);\n                    this.estimatorContainer.style.left = (pos.x - 40) + 'px';\n                    this.estimatorContainer.style.top = (pos.y - 80) + 'px';\n                }\n            }\n        }\n    }\n\n    private createEstimator() {\n        /* retrieve data */\n        let cellId = this.fighter.data.disposition.cellId;\n        let scenePos = this.wGame.isoEngine.mapRenderer.getCellSceneCoordinate(cellId);\n        let pos = this.wGame.isoEngine.mapScene.convertSceneToCanvasCoordinate(scenePos.x, scenePos.y);\n\n        /* estimatorContainer */\n        if(this.wGame.document.getElementById('estimatorContainer' + this.fighter.id)){\n            this.estimatorContainer = this.wGame.document.getElementById('estimatorContainer' + this.fighter.id);\n        }else{\n            this.estimatorContainer = document.createElement('div');\n            this.estimatorContainer.id = 'estimatorContainer' + this.fighter.id;\n        }\n\n        this.estimatorContainer.style.cssText = 'padding:3px; box-sizing: border-box; border: 1px gray solid; background-color: #222;color: white; position: absolute; border-radius: 3px; overflow: hidden; transition-duration: 500ms;';\n        this.estimatorContainer.style.left = (pos.x - 40) + 'px';\n        this.estimatorContainer.style.top = (pos.y - 80) + 'px';\n        this.estimatorContainer.innerHTML = '';\n\n        let estimations = this.getEstimations(this.spell, this.fighter);\n\n        estimations.forEach((estimation)=>{\n            let displayDammage = document.createElement('div');\n            displayDammage.innerHTML = `(${estimation.min} - ${estimation.max})`;\n\n\n            switch(estimation.element){\n                case 'water':\n                    displayDammage.style.color = '#668cff';\n                    break;\n                case 'fire':\n                    displayDammage.style.color = '#ff5c33';\n                    break;\n                case 'air':\n                    displayDammage.style.color = '#00e68a';\n                    break;\n                case 'earth':\n                    displayDammage.style.color = '#cc8800';\n                    break;\n                case 'heal':\n                    displayDammage.style.color = '#cc0080';\n                    break;\n            }\n\n            console.log(estimation.element);\n            this.estimatorContainer.appendChild(displayDammage);\n        });\n\n        this.wGame.document.getElementById('damage-estimator').appendChild(this.estimatorContainer);\n    }\n\n    public destroy() {\n        this.estimatorContainer.parentElement.removeChild(this.estimatorContainer);\n    }\n\n    //-------------------------------------------------------------------------------------------------\n\n    //obtient les estimations de dégats\n    private getEstimations(spell: any, fighter: any): IEstimation[] {\n        let estimations : IEstimation[] = [];\n\n        //pour chaque effet du sort\n        for (var effectId in spell.spellLevel.effects) {\n            let effect = spell.spellLevel.effects[effectId];\n\n            //si effet direct\n            if (effect._type == \"EffectInstanceDice\") {\n                let element = this.effectIdToElement(effect.effectId);\n                if (element != \"undefined\") {\n                    let min = this.getMinDamageDealed(element, fighter, effect);\n                    let max = this.getMaxDamageDealed(element, fighter, effect);\n                    estimations.push({\n                        element: element,\n                        min: Math.max(0, min),\n                        max: Math.max(0, max),\n                        isHeal: false,\n                    });\n                }\n            }\n            else {\n                console.log(\"Quel cet effet mystique ?\" + effect._type);\n                console.log(effect);\n                console.log(\"De ce sort:\");\n                console.log(spell);\n            }\n        }\n\n        return estimations;\n    }\n\n    /**\n     * (info) Il s'agit d'un nombre qui, comme son nom l'indique, va être multiplié avec le jet. Il est composé d'une de vos caractéristique, selon l'élément de votre sort ou arme, ainsi que de votre puissance.\n     *\n     * Multiplicateur = (Puissance + Caractéristique+100)/100\n     */\n    private getFactor(element: string) {\n        let carac = 0;\n        switch (element) {\n            case 'air':\n                carac = this.getAgility();\n                break;\n            case 'fire':\n                carac = this.getIntelligence();\n                break;\n            case 'earth':\n            case 'neutral':\n                carac = this.getStrength();\n                break;\n            case 'water':\n                carac = this.getChance();\n                break;\n\n            default:\n                break;\n        }\n        return (this.getPower() + carac + 100 ) / 100;\n    }\n\n    /**\n     * Le fixe est un bonus qui s'ajoute aux dégâts indépendamment du jet. Cela vous permet d'assurer un minimum de dégâts à chaque attaque, même si le jet obtenu est faible.\n     *\n     * Fixe = Dommages + Dommages élémentaires (+ Dommages critiques si vous faites un Coup Critique)\n     */\n    private getFixDamages(element: string) {\n        //TODO crit\n        let elementalDamages = 0;\n        switch (element) {\n            case 'air':\n                elementalDamages = this.getAirDamage();\n                break;\n            case 'fire':\n                elementalDamages = this.getFireDamage();\n                break;\n            case 'earth':\n                elementalDamages = this.getEarthDamage();\n                break;\n            case 'water':\n                elementalDamages = this.getWaterDamage();\n                break;\n            case 'neutral':\n                elementalDamages = this.getNeutralDamage();\n                break;\n\n            default:\n                break;\n        }\n        return this.getFullCharaBonus(this.wGame.gui.playerData.characters.mainCharacter.characteristics.allDamagesBonus) + elementalDamages;\n    }\n\n    /**\n     * Dégâts bruts = Partie entière[Multiplicateur x Jet + Fixe]\n     *\n     * effect: un des effets d'un sort\n     */\n    private getMinBrutDamages(element: string, effect: any) {\n        //diceNume le jet minimum d'un sort\n        return Math.trunc(this.getFactor(element) * effect.diceNum + this.getFixDamages(element));\n    }\n\n    private getMaxBrutDamages(element: string, effect: any) {\n        //diceSide le jet maximum d'un sort\n        return Math.trunc(this.getFactor(element) * effect.diceSide + this.getFixDamages(element));\n    }\n\n    private effectIdToElement(effectId: number) {\n        switch (effectId) {\n            case 96://dommages eau\n            case 91://vol de vie eau\n                return 'water';\n            case 97://dommages terre\n            case 92://vol de vie terre\n                return 'earth';\n            case 98://dommages air\n            case 93://vol de vie air\n                return 'air';\n            case 99://dommages feu\n            case 94://vol de vie feu\n                return 'fire';\n            case 100://dommages neutres\n                return 'neutral';\n            case 108://soins\n                return 'heal';\n            case 101: //retrait PA ??\n            case 116: //perte PO\n            default:\n                console.log(\"effectId inconnu:\" + effectId);\n                return 'undefined';\n        }\n    }\n\n    private getMaxDamageDealed(element: string, fighter: any, effect: any) {\n        if (element != \"heal\")\n            return Math.trunc((this.getMaxBrutDamages(element, effect) - this.getResFix(element, fighter)) * (100 - this.getPercentRes(element, fighter)) / 100);\n        else\n            return this.getMaxHeal(element, fighter, effect);\n    }\n\n    /**\n     *\n     * Dégâts subis = Partie entière([Dégâts bruts - ​Bonus fixes] * [100 - Résistance en %]/ 100)\n     */\n    private getMinDamageDealed(element: string, fighter: any, effect: any) {\n        if (element != \"heal\")\n            return Math.trunc((this.getMinBrutDamages(element, effect) - this.getResFix(element, fighter)) * (100 - this.getPercentRes(element, fighter)) / 100);\n        else\n            return this.getMinHeal(element, fighter, effect);\n    }\n\n    /**\n     * Soins = Base * (100 + Intelligence ) / 100 + Soins\n     */\n    private getMaxHeal(element: string, fighter: any, effect: any){\n        return Math.trunc(effect.diceSide * (100 + this.getIntelligence()) / 100 + this.getHealingBonus());\n    }\n    private getMinHeal(element: string, fighter: any, effect: any){\n        return Math.trunc(effect.diceNum * (100 + this.getIntelligence()) / 100 + this.getHealingBonus());\n    }\n\n    private getHealingBonus(){\n        let h = this.wGame.gui.playerData.characters.mainCharacter.characteristics.healBonus;\n        return this.getFullCharaBonus(h);\n    }\n\n//retourne le montant total de la carac (bonus inclus)\n    private getFullCharaBonus(characteristic: any) {\n        let sum = 0;\n        if (typeof characteristic.base !== 'undefined') {\n            sum += characteristic.base;\n        }\n        if (typeof characteristic.contextModif !== 'undefined') {\n            sum += characteristic.contextModif;\n        }\n        if (typeof characteristic.objectsAndMountBonus !== 'undefined') {\n            sum += characteristic.objectsAndMountBonus;\n        }\n        if (typeof characteristic.alignGiftBonus !== 'undefined') {\n            sum += characteristic.alignGiftBonus;\n        }\n        return sum;\n    }\n\n//puissance\n    private getPower() {\n        let d = this.wGame.gui.playerData.characters.mainCharacter.characteristics.damagesBonusPercent;\n        //dafuq is that: permanentDamagePercent\n        //let p = this.wGame.gui.playerData.characters.mainCharacter.characteristics.permanentDamagePercent;\n        return this.getFullCharaBonus(d);// + this.getFullCharaBonus(p);\n    }\n\n// ---- éléments ----\n\n    private getFullCharaBonusElement(characteristic:any){\n        //si element < 0 alors = 0\n        let total = this.getFullCharaBonus(characteristic);\n        if (total < 0)\n            total = 0;\n        return total;\n    }\n\n    private getAgility() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.agility;\n        return this.getFullCharaBonusElement(a);\n    }\n\n    private getChance() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.chance;\n        return this.getFullCharaBonusElement(a);\n    }\n\n    private getIntelligence() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.intelligence;\n        return this.getFullCharaBonusElement(a);\n    }\n\n    private getStrength() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.strength;\n        return this.getFullCharaBonusElement(a);\n    }\n\n// ---- dommages élémentaires ---\n    private getAirDamage() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.airDamageBonus;\n        return this.getFullCharaBonus(a);\n    }\n\n    private getFireDamage() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.fireDamageBonus;\n        return this.getFullCharaBonus(a);\n    }\n\n    private getEarthDamage() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.earthDamageBonus;\n        return this.getFullCharaBonus(a);\n    }\n\n    private getWaterDamage() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.waterDamageBonus;\n        return this.getFullCharaBonus(a);\n    }\n\n    private getNeutralDamage() {\n        let a = this.wGame.gui.playerData.characters.mainCharacter.characteristics.neutralDamageBonus;\n        return this.getFullCharaBonus(a);\n    }\n\n// --- resistances / faiblesses ---\n    /**\n     *\n     * Bonus fixe = Résistance élémentaire fixe + Résistance fixe des sorts (+Résistance critique si le sort fait un coup critique)\n     */\n    private getResFix(element: string, fighter: any) {\n        //TODO crit\n        return this.getResFixElement(element, fighter) + this.getResFixSpell(element, fighter);\n    }\n\n//resistance élémentaire fixe\n    private getResFixElement(element: string, fighter: any) {\n        let stats = fighter.data.stats;\n        let res = 0;\n        switch (element) {\n            case 'air':\n                res = stats.waterElementReduction;\n                break;\n            case 'fire':\n                res = stats.fireElementReduction;\n                break;\n            case 'earth':\n                res = stats.earthElementReduction;\n                break;\n            case 'water':\n                res = stats.waterElementReduction;\n                break;\n            case 'neutral':\n                res = stats.neutralElementReduction;\n                break;\n\n            default:\n                break;\n        }\n        return res;\n    }\n\n//restance fixe des sorts (mot prev ...)\n    private getResFixSpell(element: string, fighter: any) {\n        let res = 0;\n\n        for (var buff of fighter.buffs) {\n            //si reduction de dégats\n            let caster = this.wGame.gui.fightManager.getFighter(buff.source);\n            let lvl = caster.level;\n            if (buff.effect.effect.characteristic == 16) {\n                switch (buff.castingSpell.spell.id){\n                    case 1://armure incandescente\n                        if(element = 'fire')\n                            res += buff.effect.value * (100 + 5 * lvl) / 100;\n                        break;\n                    case 18://armure aqueuse\n                        console.log(\"armure aqueuse: \"+element);\n                        if(element = 'water')\n                            res += buff.effect.value * (100 + 5 * lvl) / 100;\n                        break;\n                    case 6:// armure terrestre\n                        if(element = 'earth')\n                            res += buff.effect.value * (100 + 5 * lvl) / 100;\n                        break;\n                    case 14:// armure venteuse\n                        if(element = 'air')\n                            res += buff.effect.value * (100 + 5 * lvl) / 100;\n                        break;\n                    case 5://trêve\n                    case 127://mot de prévention\n                        res += buff.effect.value * (100 + 5 * lvl) / 100;\n                        break;\n                    default:\n                        console.log(\"Quel est ce buff: \"+buff.effect.effectId+ \" - \"+buff.effect.description);\n                        console.log(\"catégorie: \"+buff.effect.effect.category);\n                        break;\n                }\n                //res += buff.effect.value * (100 + 5 * lvl) / 100;\n            }\n        }\n        return Math.trunc(res);\n    }\n\n//res en pourcents\n    private getPercentRes(element: string, fighter: any) {\n        let stats = fighter.data.stats;\n        let res = 0;\n        switch (element) {\n            case 'air':\n                res = stats.waterElementResistPercent;\n                break;\n            case 'fire':\n                res = stats.fireElementResistPercent;\n                break;\n            case 'earth':\n                res = stats.earthElementResistPercent;\n                break;\n            case 'water':\n                res = stats.waterElementResistPercent;\n                break;\n            case 'neutral':\n                res = stats.neutralElementResistPercent;\n                break;\n\n            default:\n                break;\n        }\n        //si c'est un joueur (pas une invoc ou créature) la res ne peux pas etre plus elevée que 50%\n        if ((!fighter.isCreature) && res > 50)\n            res = 50;\n        return res;\n    }\n}\n"]}