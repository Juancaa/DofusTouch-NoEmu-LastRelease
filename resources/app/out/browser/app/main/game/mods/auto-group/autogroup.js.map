{"version":3,"sources":["../src/browser/app/main/game/mods/auto-group/autogroup.ts"],"names":[],"mappings":"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","file":"autogroup.js","sourcesContent":["//background.toggleDebugMode()\n\n\n// check si GameMovement concerne le leader\n// window.gui.playerData.partyData._partyFromId[8614]._leaderId\n// si oui est-ce que le leader change de map?\n/*dofus.connectionManager.on('GameMapMovementMessage', function (msg) {\n console.info(msg);\n msg.actorId;\n msg.keyMovements\n });*/\n\n// changer de map et le suivre\n\nimport {Option} from \"../../../../../shared/settings/settings.service\";\nimport {EventEmitter} from 'eventemitter3';\nimport {IpcRendererService} from \"../../../../../shared/electron/ipcrenderer.service\";\ntype Direction = \"top\" | \"bottom\" | \"left\" | \"right\" | false;\n\nexport class AutoGroup {\n\n    private wGame: any | Window;\n    private params: Option.VIP.AutoGroup;\n    private events: any[];\n    private ipcRendererService: IpcRendererService;\n    private lock: boolean = false;\n    private static counter: number = 1;\n    private static resetCounter: any = null;\n\n\n    constructor(wGame: any, params: Option.VIP.AutoGroup, ipcRendererService: IpcRendererService) {\n        this.wGame = wGame;\n        this.params = params;\n        this.ipcRendererService = ipcRendererService;\n        this.events = [];\n\n        if (this.params.active) {\n\n            console.info('- Auto-Group enable');\n\n            if (!AutoGroup.resetCounter) {\n                AutoGroup.resetCounter = () => {\n                    console.info('reset counter');\n                    AutoGroup.counter = 1;\n                };\n\n                this.ipcRendererService.on('auto-group-reset-counter', AutoGroup.resetCounter);\n                this.events.push(() => {\n                    this.ipcRendererService.removeListener('auto-group-reset-counter', AutoGroup.resetCounter);\n                });\n\n            }\n\n            // acceptation de l'invitation automatiquement\n            this.autoAcceptPartyInvitation(this.wGame.gui.isConnected);\n\n            // suit le leader automatiquement\n            if (this.params.follow_leader)\n                this.followLeader(this.wGame.gui.isConnected);\n\n\n            // entre en combat automatiquement\n            if (this.params.fight)\n                this.autoEnterFight(this.wGame.gui.isConnected);\n\n            // le leader invite les membres\n            this.autoMasterParty(this.wGame.gui.isConnected);\n\n        }\n    }\n\n    public autoMasterParty(skipLogin: boolean = false) {\n        let onCharacterSelectedSuccess = () => {\n            try {\n                setTimeout(() => {\n                    if (this.params.leader == this.wGame.gui.playerData.characterBaseInformations.name) {\n                        console.info('start master party')\n                        let idInt = setInterval(() => {\n                            this.masterParty(this.params.members.split(';'));\n                        }, 6000);\n\n                        this.events.push(() => {\n                            clearInterval(idInt);\n                        });\n\n                        this.wGame.gui.on(\"disconnect\", () => {\n                            clearInterval(idInt);\n                        });\n                    }\n                }, 3000);\n            } catch (e) {\n                console.log(e);\n            }\n        };\n\n        if (skipLogin) {\n            onCharacterSelectedSuccess();\n        }\n\n        this.wGame.gui.playerData.on(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        this.events.push(() => {\n            this.wGame.gui.playerData.removeListener(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        });\n\n    }\n\n    private inviteToParty(name: string): void {\n        this.wGame.dofus.sendMessage(\"PartyInvitationRequestMessage\", {name: name});\n    }\n\n    private acceptPartyInvitation(partyId: number): void {\n        this.wGame.dofus.sendMessage(\"PartyAcceptInvitationMessage\", {partyId: partyId});\n    }\n\n    public autoAcceptPartyInvitation(skipLogin: boolean = false): void {\n\n        let onCharacterSelectedSuccess = () => {\n\n            try {\n\n                let onPartyInvitationMessage = (msg: any) => {\n                    if (this.params.leader === msg.fromName) {\n                        this.acceptPartyInvitation(msg.partyId);\n                    }\n                };\n\n                setTimeout(() => {\n\n                    this.wGame.dofus.connectionManager.on('PartyInvitationMessage', onPartyInvitationMessage);\n                    this.events.push(() => {\n                        this.wGame.dofus.connectionManager.removeListener('PartyInvitationMessage', onPartyInvitationMessage);\n                    });\n\n                    this.wGame.gui.on(\"disconnect\", () => {\n                        this.wGame.dofus.connectionManager.removeListener('PartyInvitationMessage', onPartyInvitationMessage);\n                    });\n                }, 2000);\n\n            } catch (e) {\n                console.log(e);\n            }\n        };\n\n        if (skipLogin) {\n            onCharacterSelectedSuccess();\n        }\n\n        this.wGame.gui.playerData.on(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        this.events.push(() => {\n            this.wGame.gui.playerData.removeListener(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        });\n    }\n\n    public getPartyMembers(): Array<string> {\n        let party = [];\n        //si dans un groupe\n        if (Object.keys(this.wGame.gui.playerData.partyData._partyFromId).length !== 0) {\n            //recup des membres du grp\n            let partyMembers = this.wGame.gui.playerData.partyData._partyFromId[Object.keys(this.wGame.gui.playerData.partyData._partyFromId)[0]]._members;\n            //mise en forme\n            for (let player in partyMembers) {\n                party.push(partyMembers[player].name);\n            }\n        }\n\n        return party;\n    }\n\n    private masterParty(nameList: Array<string>) {\n        let partyMembers = this.getPartyMembers();\n        nameList.forEach((name) => {\n\n            if (!partyMembers.includes(name)) {\n                this.wGame.dofus.sendMessage('BasicWhoIsRequestMessage', {\n                    search: name,\n                    verbose: true\n                });\n\n                this.wGame.dofus.connectionManager.once('BasicWhoIsMessage', (msg: any) => {\n\n                    //si perso pas dans le groupe\n                    if (msg.playerState == 1) {\n                        this.inviteToParty(name);\n                    }\n                });\n            }\n        });\n    }\n\n    public reset() {\n        this.events.forEach((event) => {\n            event();\n        });\n        this.events = [];\n    }\n\n    private isBorder(cellId: number): Direction {\n        if (0 <= cellId && cellId <= 13 ||\n            15 <= cellId && cellId <= 26) {\n            return \"top\";\n        }\n\n        if (546 <= cellId && cellId <= 559 ||\n            533 <= cellId && cellId <= 545) {\n            return \"bottom\";\n        }\n\n        if (cellId % 28 == 0 ||\n            cellId % 28 == 14) {\n            return \"left\";\n        }\n        if (cellId % 28 == 27 ||\n            cellId % 28 == 13) {\n            return \"right\"\n        }\n\n        return false;\n    }\n\n    private getRandomInt(min: number, max: number): number {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    private followFunc(msg: any): void {\n        // TODO : utiliser 'window.isoEngine.mapRenderer.getChangeMapFlags(426)' pour test les cell en bordure\n\n        // Si le joueur est dans un groupe\n        if (Object.keys(this.wGame.gui.playerData.partyData._partyFromId).length !== 0) {\n\n            let party = this.wGame.gui.playerData.partyData._partyFromId[Object.keys(this.wGame.gui.playerData.partyData._partyFromId)[0]];\n\n            // Si ce n'est pas le leader qui se déplace\n            if (party._leaderId === msg.actorId && party._leaderId !== this.wGame.gui.playerData.id) {\n\n                let event = new EventEmitter();\n\n                // Detetection d'un element qui disparait sur la map\n                let onGameContextRemoveElementMessage = (msg: any) => {\n\n                    // Si c'est le leader qui à disparu\n                    if (!this.lock && msg.id === party._leaderId) {\n\n                        event.once('finish', (cellId) => {\n                            this.wGame.isoEngine._movePlayerOnMap(cellId, false, null);\n                        });\n                    }\n                };\n\n                this.wGame.dofus.connectionManager.once('GameContextRemoveElementMessage', onGameContextRemoveElementMessage);\n\n                // Récupération de la dernière cellule\n                let lastCellId = msg.keyMovements[msg.keyMovements.length - 1];\n                let direction = this.isBorder(lastCellId);\n\n                // Calcul du délai aléatoire\n                let delay = 0;\n                let max = 15;\n                let min = -15;\n                if (this.params.delay > 0) {\n                    delay = (this.params.delay + this.params.delay * (Math.floor(Math.random() * (max - min + 1)) + min) * 0.01) * 1000;\n\n                    if (this.params.leader)\n                        delay = delay * AutoGroup.counter++;\n                }\n\n\n                setTimeout(() => {\n                    // Si le mouvement n'est pas lock on bouge\n                    if (!this.lock) {\n                        let cellDirection = lastCellId;\n                        if (direction) {\n                            this.wGame.isoEngine.gotoNeighbourMap(direction, lastCellId, 144, 4);\n                            this.wGame.dofus.connectionManager.removeListener('GameContextRemoveElementMessage', onGameContextRemoveElementMessage);\n                        } else {\n                            if (this.params.random_move) {\n\n                                let steps = [-15, -1, 13, 28, 14, 1, -14, -28];\n\n                                let step = steps[this.getRandomInt(0, 7)];\n\n                                cellDirection = lastCellId + step;\n                            }\n\n                            this.wGame.isoEngine._movePlayerOnMap(cellDirection, false, () => {\n                                event.emit('finish', lastCellId);\n                                setTimeout(() => {\n                                    this.wGame.dofus.connectionManager.removeListener('GameContextRemoveElementMessage', onGameContextRemoveElementMessage);\n                                }, 500);\n                            });\n                        }\n                    }\n\n                }, delay);\n            } else if (party._leaderId === msg.actorId && party._leaderId === this.wGame.gui.playerData.id) {\n                //AutoGroup.counter = 1;\n                this.ipcRendererService.send('auto-group-reset-counter');\n            }\n        }\n    }\n\n    private followInteractivFunc(msg: any): void {\n        if (Object.keys(this.wGame.gui.playerData.partyData._partyFromId).length !== 0) {\n            let party = this.wGame.gui.playerData.partyData._partyFromId[Object.keys(this.wGame.gui.playerData.partyData._partyFromId)[0]];\n            if (party._leaderId === msg.entityId && party._leaderId !== this.wGame.gui.playerData.id) {\n\n                // On lock le movement pour eviter que followFunc prenne le dessus\n                this.lock = true;\n\n                let delay = 0;\n                let max = 15;\n                let min = -15;\n                if (this.params.delay > 0) {\n                    delay = (this.params.delay + this.params.delay * (Math.floor(Math.random() * (max - min + 1)) + min) * 0.01) * 1000;\n\n                    if (this.params.leader)\n                        delay = delay * AutoGroup.counter++;\n                }\n\n                let interactive = this.wGame.isoEngine.mapRenderer.interactiveElements[msg.elemId];\n                let skillId = msg.skillId;\n                let skillInstanceUid: any = null;\n\n                for (let id in interactive.enabledSkills) {\n                    if (interactive.enabledSkills[id].skillId == skillId) {\n                        skillInstanceUid = interactive.enabledSkills[id].skillInstanceUid;\n                        break;\n                    }\n                }\n\n                setTimeout(() => {\n                    this.wGame.isoEngine.useInteractive(msg.elemId, skillInstanceUid);\n                    this.lock = false;\n                }, delay);\n\n            } else {\n                //AutoGroup.counter = 1;\n                this.ipcRendererService.send('auto-group-reset-counter');\n            }\n        }\n    }\n\n    public followLeader(skipLogin: boolean = false): void {\n\n        let onCharacterSelectedSuccess = () => {\n\n            try {\n\n                let onGameMapMovementMessage = (msg: any) => {\n                    this.followFunc(msg);\n                };\n\n                let onInteractiveUsedMessage = (msg: any) => {\n                    this.followInteractivFunc(msg);\n                };\n\n\n                setTimeout(() => {\n                    this.wGame.dofus.connectionManager.on('GameMapMovementMessage', onGameMapMovementMessage);\n                    this.wGame.dofus.connectionManager.on('InteractiveUsedMessage', onInteractiveUsedMessage);\n\n                    this.events.push(() => {\n                        this.wGame.dofus.connectionManager.removeListener('GameMapMovementMessage', onGameMapMovementMessage);\n                        this.wGame.dofus.connectionManager.removeListener('InteractiveUsedMessage', onInteractiveUsedMessage);\n                    });\n\n                    this.wGame.gui.on(\"disconnect\", () => {\n                        this.wGame.dofus.connectionManager.removeListener('GameMapMovementMessage', onGameMapMovementMessage);\n                        this.wGame.dofus.connectionManager.removeListener('InteractiveUsedMessage', onInteractiveUsedMessage);\n                    });\n\n                }, 2000);\n\n            } catch (e) {\n                console.log(e);\n            }\n        };\n\n        if (skipLogin) {\n            onCharacterSelectedSuccess();\n        }\n\n        this.wGame.gui.playerData.on(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        this.events.push(() => {\n            this.wGame.gui.playerData.removeListener(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        });\n    }\n\n    public autoEnterFight(skipLogin: boolean = false) {\n\n        let onCharacterSelectedSuccess = () => {\n\n            try {\n                let joinFight = (fightId: number, fighterId: number) => {\n                    return new Promise((resolve, reject) => {\n                        this.wGame.dofus.sendMessage(\"GameFightJoinRequestMessage\", {fightId, fighterId});\n                        setTimeout(() => {\n                            resolve();\n                        }, 1500);\n                    });\n                };\n\n                let ready = () => {\n                    return new Promise((resolve, reject) => {\n                        this.wGame.dofus.sendMessage(\"GameFightReadyMessage\", {isReady: true});\n                        setTimeout(() => {\n                            resolve();\n                        }, 200);\n                    });\n                };\n\n                let onPartyMemberInFightMessage = (e: any) => {\n                    if (this.wGame.isoEngine.mapRenderer.mapId === e.fightMap.mapId) {\n                        joinFight(e.fightId, e.memberId)\n                            .then(() => {\n                                if (this.params.ready)\n                                    return ready();\n                                else\n                                    return;\n                            });\n                    }\n\n                };\n\n                setTimeout(() => {\n                    this.wGame.dofus.connectionManager.on(\"PartyMemberInFightMessage\", onPartyMemberInFightMessage);\n                    this.events.push(() => {\n                        this.wGame.dofus.connectionManager.removeListener(\"PartyMemberInFightMessage\", onPartyMemberInFightMessage);\n                    });\n\n                    this.wGame.gui.on(\"disconnect\", () => {\n                        this.wGame.dofus.connectionManager.removeListener('PartyMemberInFightMessage', onPartyMemberInFightMessage);\n                    });\n\n                }, 2000);\n\n            } catch (e) {\n                console.log(e);\n            }\n        };\n\n        if (skipLogin) {\n            onCharacterSelectedSuccess();\n        }\n\n        this.wGame.gui.playerData.on(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        this.events.push(() => {\n            this.wGame.gui.playerData.removeListener(\"characterSelectedSuccess\", onCharacterSelectedSuccess);\n        });\n    }\n}"]}