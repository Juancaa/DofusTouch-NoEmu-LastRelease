{"version":3,"sources":["../src/electron/application.ts"],"names":[],"mappings":"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","file":"application.js","sourcesContent":["import { ChangeLogWindow } from \"./windows/changelog-window\";\nconst settings = require('electron-settings');\nconst i18n = require('node-translate');\nimport electron = require(\"electron\");\nconst updater = require('electron-simple-updater');\nimport { app, ipcMain, dialog, BrowserWindow } from 'electron';\nimport * as request from 'request';\nimport { checkSettings } from './check-settings';\n\nimport { DefaultSettings } from './default.settings';\nimport { GameWindow } from './windows/game-window';\nimport { UpdateWindow } from './windows/update-window';\nimport { ISettings } from \"./isettings\";\n\nimport { PromptPassword } from './windows/prompt-password-window';\nimport { Crypt } from \"../shared/crypt\";\n\nexport class Application {\n\n    public static website: string = \"http://api.no-emu.com\";\n    public static cmdOptions: any;\n    public static appPath: string;\n    private static gameWindows: GameWindow[] = [];\n\n    public static init(cmdOptions: any) {\n\n        // retrieve cmd option\n        this.cmdOptions = cmdOptions;\n\n        // set application path\n        this.appPath = app.getAppPath();\n        if (this.cmdOptions.devmode) {\n            this.appPath = __dirname + '/../..';\n        }\n\n\n        // set defaults settings\n        settings.defaults(DefaultSettings);\n\n        // if wrong settings -> reset\n        settings.applyDefaultsSync();\n        if (!checkSettings()) {\n            //app.quit();\n            //settings.resetToDefaultsSync();\n        }\n\n        if (!settings.getSync('language')) {\n            let local = app.getLocale();\n\n            if (local.search('en') !== -1) {\n                settings.setSync('language', 'en');\n            } else if (local.search('fr') !== -1) {\n                settings.setSync('language', 'fr');\n            } else if (local.search('es') !== -1) {\n                settings.setSync('language', 'es');\n            } else {\n                settings.setSync('language', 'en');\n            }\n        }\n\n        // set language\n        i18n.requireLocales({\n            'en': require(`${Application.appPath}/i18n/electron/en`),\n            'fr': require(`${Application.appPath}/i18n/electron/fr`),\n            'es': require(`${Application.appPath}/i18n/electron/es`)\n        });\n\n        i18n.setLocale(settings.getSync('language'));\n\n        ipcMain.on('read-settings', (event, args) => {\n            let value = settings.getSync(args[0]);\n            event.returnValue = value;\n        });\n\n        ipcMain.on('write-settings', (event, args) => {\n            event.returnValue = settings.setSync(args[0], args[1]);\n        });\n\n        return this;\n    }\n\n    private static getVipStatus(): Promise<{ status: number, date: number }> {\n        return new Promise((resolve, reject) => {\n\n            if (!settings.getSync('vip_id')) {\n                return resolve({ status: null, date: null });\n            }\n\n            request.get({\n                url: `${this.website}/tipeee.php?vip_id=${settings.getSync('vip_id')}`,\n            }, (error, response, body) => {\n                if (!error && response.statusCode == 200) {\n                    let bodyParse = JSON.parse(body);\n\n                    resolve(bodyParse);\n                } else {\n                    reject(error);\n                }\n            });\n        });\n    }\n\n    private static getRemoteVersion(): Promise<{ appVersion: string, buildVersion: string }> {\n        return new Promise((resolve, reject) => {\n            request.get({\n                url: `${this.website}/version.json?time=${new Date().getTime()}`,\n                forever: true\n            }, function (error, response, body) {\n\n                if (!error && response.statusCode == 200) {\n                    let bodyParse = JSON.parse(body);\n                    resolve(bodyParse);\n                } else {\n                    reject(error);\n                }\n            });\n        });\n    }\n\n\n    public static requestMasterPassword(): Promise<string> {\n\n        let promptWindow: Electron.BrowserWindow = PromptPassword.run();\n\n        // Upon master password validated\n        return new Promise((success, fail) => {\n\n            promptWindow.on('close', ()=>{\n                //settings.setSync(\"option.vip.multi_account.active\", false);\n                success(null);\n            });\n\n            ipcMain.on('master-password', (event, args: string) => {\n                if (settings.getSync(\"option.vip.multi_account.master_password\") != Crypt.createHash(args[0]))\n                    PromptPassword.displayWrongPassword(promptWindow);\n                else {\n                    success(args[0]);\n                    promptWindow.close();\n                }\n            });\n\n            ipcMain.on('master-password-canceled', () => {\n                //settings.setSync(\"option.vip.multi_account.active\", false);\n                success(null);\n                promptWindow.close();\n            });\n        });\n    }\n\n    public static run() {\n\n        let fakeWindow = new electron.BrowserWindow({ frame: false, transparent: true });\n        let masterpassword: string = null;\n\n        // retrieve remote version\n        Promise.all([\n            this.getRemoteVersion(),\n            this.getVipStatus(),\n        ]).then(([version, vip]) => {\n            console.log(vip);\n            settings.setSync('appVersion', version.appVersion);\n\n            fakeWindow.hide();\n\n            // run update\n            UpdateWindow.run().then(() => {\n\n                if (settings.getSync(\"option.vip.multi_account.active\")) {\n                    this.requestMasterPassword().then((_masterpassword) => {\n                        if (_masterpassword) {\n                            masterpassword = _masterpassword;\n                            this.addMultiWindows();\n                        } else {\n                            this.addWindow();\n                        }\n\n                        fakeWindow.close();\n                    });\n                } else {\n                    this.addWindow();\n                    fakeWindow.close();\n                }\n\n                // close update window\n\n                if (UpdateWindow && UpdateWindow.win && !UpdateWindow.win.isDestroyed()) {\n                    UpdateWindow.win.close();\n                }\n\n                if (Application.cmdOptions.changelog) {\n                    ChangeLogWindow.run();\n                }\n\n            }).catch((raison: any) => {\n                console.log('run update error');\n                dialog.showMessageBox(BrowserWindow.getFocusedWindow(), {\n                    type: 'error',\n                    title: 'Error',\n                    message: raison.toString(),\n                    buttons: ['Fermer']\n                }, () => {\n                    app.exit();\n                });\n            });\n\n            ipcMain.on('load-config', (event, arg) => {\n                event.returnValue = {\n                    gamePath: app.getPath('userData') + '/game',\n                    appPath: Application.appPath,\n                    buildVersion: version.buildVersion,\n                    appVersion: version.appVersion,\n                    platform: process.platform,\n                    language: settings.getSync('language'),\n                    vipStatus: vip.status,\n                    vipDate: vip.date,\n                    masterpassword: masterpassword,\n                    website: this.website\n                }\n            });\n\n            ipcMain.on('auto-group-reset-counter', (event, arg) => {\n                console.log('receive -> auto-group-reset-counter');\n                this.gameWindows.forEach((gWindow, index) => {\n                    console.log('send -> auto-group-reset-counter to gWindow ' + index);\n                    gWindow.win.webContents.send('auto-group-reset-counter');\n                });\n            });\n\n        }).catch((raison: any) => {\n\n            fakeWindow.close();\n\n            dialog.showMessageBox(BrowserWindow.getFocusedWindow(), {\n                type: 'error',\n                title: 'Error',\n                message: raison.toString(),\n                buttons: ['Fermer']\n            }, () => {\n                app.exit();\n            });\n        });\n\n    }\n\n    public static reloadSettings(): void {\n\n        this.gameWindows.forEach((gWindow) => {\n\n            if (!settings.getSync('language')) {\n                let local = app.getLocale();\n\n                if (local.search('en') !== -1) {\n                    settings.setSync('language', 'en');\n                } else if (local.search('fr') !== -1) {\n                    settings.setSync('language', 'fr');\n                } else if (local.search('es') !== -1) {\n                    settings.setSync('language', 'es');\n                } else {\n                    settings.setSync('language', 'en');\n                }\n            }\n\n            i18n.setLocale(settings.getSync('language'));\n            gWindow.reloadSettings();\n        });\n\n    }\n\n    public static addWindow(): void {\n\n        // instance window game\n        let gWindow = new GameWindow(this);\n\n        // start the game window\n        gWindow.run();\n\n        // add event listenner closed\n        gWindow.closed((e) => {\n            delete this.gameWindows[this.gameWindows.indexOf(e)];\n        });\n\n        // add the game window\n        this.gameWindows.push(gWindow);\n    }\n\n    public static addMultiWindows(): void {\n\n        // Retrieve windows from settings\n        let windows = settings.getSync(\"option.vip.multi_account.windows\");\n\n        let windowsCount = 0;\n        // Event fired when a main.component is initiated\n        ipcMain.on('window-ready', (event, arg) => {\n            windowsCount += 1; // Increment windows at each event\n            if (windowsCount == windows.length) // When all windows have responded\n                for (let i in windows)\n                    this.gameWindows[i].win.webContents.send('accounts', windows[i]);\n        });\n\n        for (let i in windows) {\n            this.addWindow();\n        }\n    }\n}\n"]}