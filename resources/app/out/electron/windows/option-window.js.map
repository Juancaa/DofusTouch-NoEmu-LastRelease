{"version":3,"sources":["../src/electron/windows/option-window.ts"],"names":[],"mappings":";;AAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC9C,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAC;AAExC,gDAA6C;AAE7C;IAII,MAAM,CAAC,GAAG;QAEN,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAA,CAAC;YACpC,IAAI,CAAC,GAAG,GAAG,IAAI,QAAQ,CAAC,aAAa,CAAC;gBAClC,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,GAAG;gBACX,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,IAAI;gBACZ,MAAM,EAAE,QAAQ,CAAC,aAAa,CAAC,gBAAgB,EAAE;gBACjD,SAAS,EAAE,IAAI;gBACf,WAAW,EAAE,IAAI;gBACjB,IAAI,EAAE,KAAK;gBACX,eAAe,EAAE,IAAI;aACxB,CAAC,CAAC;YAEH,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEvB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAS;gBAC3B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,yBAAW,CAAC,cAAc,EAAE,CAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,yBAAW,CAAC,OAAO,iCAAiC,CAAC,CAAC;YAEjF,OAAO,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,KAAK,EAAE,GAAG;gBAErC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,GAAG;gBAElC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gBACrC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;gBAE/B,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC7C,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC;QAAA,IAAI,CAAA,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;IACL,CAAC;CACJ;AAlDD,oCAkDC","file":"option-window.js","sourcesContent":["const settings = require('electron-settings');\nconst electron = require('electron');\nconst { app, Menu, ipcMain } = electron;\n\nimport { Application } from '../application';\n\nexport class OptionWindow {\n\n    private static win: Electron.BrowserWindow;\n\n    static run(): void{\n\n        if(!this.win || this.win.isDestroyed()){\n            this.win = new electron.BrowserWindow({\n                width: 820,\n                height: 500,\n                resizable: false,\n                center: true,\n                parent: electron.BrowserWindow.getFocusedWindow(),\n                darkTheme: true,\n                skipTaskbar: true,\n                show: false,\n                autoHideMenuBar: true\n            });\n\n            this.win.setMenu(null);\n\n            this.win.on('close', (event:any) => {\n                console.log('prevent closing');\n                Application.reloadSettings();\n                this.win.hide();\n                return event.preventDefault();\n            });\n\n            this.win.loadURL(`file://${Application.appPath}/out/browser/index.html#/option`);\n\n            ipcMain.on('validate-option', (event, arg) => {\n                //this.application.reloadSettings();\n                this.win.close();\n            });\n\n            ipcMain.on('reset-option', (event, arg) => {\n                //this.application.reloadSettings();\n                console.log('receive->reset-option');\n                settings.resetToDefaultsSync();\n                //this.application.reloadSettings();\n                this.win.webContents.send('reload-settings');\n                this.win.hide();\n            });\n\n            this.win.show();\n        }else{\n            this.win.show();\n            this.win.focus();\n        }\n    }\n}\n"]}