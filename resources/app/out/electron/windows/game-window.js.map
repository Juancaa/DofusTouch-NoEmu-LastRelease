{"version":3,"sources":["../src/electron/windows/game-window.ts"],"names":[],"mappings":";;AAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC9C,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAC;AAExC,4CAAyC;AACzC,6DAAwD;AACxD,gDAA6C;AAE7C;IAOI,YAAY,WAAwB;QAN5B,YAAO,GAAY,KAAK,CAAC;QAO7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QACjE,IAAI,CAAC,GAAG,GAAG,IAAI,QAAQ,CAAC,aAAa,CAAC;YAClC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;YACjE,cAAc,EAAE,IAAI;YACpB,MAAM,EAAE,IAAI;YACZ,cAAc,EAAE;gBACZ,oBAAoB,EAAE,KAAK;gBAC3B,8BAA8B,EAAE,IAAI;gBACpC,2BAA2B,EAAE,IAAI;gBACjC,WAAW,EAAE,KAAK;aACrB;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,qCAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;IACjE,CAAC;IAEM,cAAc;QACjB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7C,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE;YACjC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,qCAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAEM,GAAG;QAEN,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,yBAAW,CAAC,OAAO,yBAAyB,EACnE,EAAE,SAAS,EAAE,EAAE,EAA2D,CAAC,CAAC;QAGhF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAGnC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAGxB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACxC,CAAC;IACL,CAAC;IAGM,MAAM,CAAC,EAA2B;QACrC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAChB,EAAE,CAAC,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAhED,gCAgEC","file":"game-window.js","sourcesContent":["const settings = require('electron-settings');\nconst electron = require('electron');\nconst { app, Menu, ipcMain } = electron;\n\nimport { ShortCuts } from '../shortcuts';\nimport { GameMenuTemplate } from './game-menu.template';\nimport { Application } from '../application';\n\nexport class GameWindow {\n    private devMode: boolean = false;\n    public win: Electron.BrowserWindow;\n    private application: Application;\n    private menu: Electron.Menu;\n    public shortCuts: ShortCuts;\n\n    constructor(application: Application) {\n        this.application = application;\n        this.devMode = settings.getSync('option.general.developer-mode');\n        this.win = new electron.BrowserWindow({\n            width: parseInt(settings.getSync('option.general.resolution').x),\n            height: parseInt(settings.getSync('option.general.resolution').y),\n            useContentSize: true,\n            center: true,\n            webPreferences: {\n                backgroundThrottling: false,\n                allowDisplayingInsecureContent: true,\n                allowRunningInsecureContent: true,\n                webSecurity: false\n            }\n        });\n        this.shortCuts = new ShortCuts(this.win);\n        this.menu = Menu.buildFromTemplate(GameMenuTemplate.build());\n    }\n\n    public reloadSettings(): void {\n        console.log('emit->reload-settings');\n        this.win.webContents.send('reload-settings');\n\n        ipcMain.once('reload-settings-done', ()=>{\n            console.log('receive->reload-settings-done');\n            this.shortCuts.reload();\n            this.win.webContents.send('reload-settings-done');\n        });\n\n        this.menu = Menu.buildFromTemplate(GameMenuTemplate.build());\n        Menu.setApplicationMenu(this.menu);\n    }\n\n    public run(): void {\n        // load the app\n        this.win.loadURL(`file://${Application.appPath}/out/browser/index.html`,\n            { userAgent: ''/*require('random-mobile-ua').randomTabletAgent().agent*/ });\n\n        // set menu\n        Menu.setApplicationMenu(this.menu);\n\n        // bind shortcuts\n        this.shortCuts.enable();\n\n\n        if (this.devMode) {\n            this.win.webContents.openDevTools();\n        }\n    }\n\n\n    public closed(cb: (e: GameWindow) => void): void {\n        this.win.on('closed', () => {\n            this.win = null;\n            cb(this);\n        });\n    }\n}\n"]}