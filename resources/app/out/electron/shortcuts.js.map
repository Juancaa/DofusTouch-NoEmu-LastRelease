{"version":3,"sources":["../src/electron/shortcuts.ts"],"names":[],"mappings":";;AAAA,MAAM,qBAAqB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAChE,MAAM,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC9C,MAAM,EAAC,GAAG,EAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,MAAM,aAAa,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAGzD;IAKI,YAAY,GAA2B;QACnC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEM,OAAO;QACV,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,EAAE,CAAC,QAAgB,EAAE,KAAa;YAC9F,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBAClE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YAEP,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM;QAIT,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAG9C,IAAI,CAAC,OAAO,EAAE,CAAC;QAGf,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAClD,CAAC;IAEM,MAAM;QACT,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,EAAE,CAAA;QAClB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;IAEM,OAAO;QACV,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,QAAgB;QAClC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAEjD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;CACJ;AApDD,8BAoDC","file":"shortcuts.js","sourcesContent":["const electronLocalshortcut = require('electron-localshortcut');\nconst settings = require('electron-settings');\nconst {app} = require('electron');\nconst async = require('async');\nconst isAccelerator = require(\"electron-is-accelerator\");\n\n\nexport class ShortCuts {\n\n    private win: Electron.BrowserWindow;\n    private isBinded: boolean;\n\n    constructor(win: Electron.BrowserWindow) {\n        this.win = win;\n        this.isBinded = false;\n    }\n\n    public bindAll(): void {\n        async.forEachOf(settings.getSync('option.shortcuts.no_emu.tabs'), (shortcut: string, index: number) => {\n            if (shortcut) {\n                electronLocalshortcut.register(this.win, ShortCuts.convert(shortcut), () => {\n                    this.win.webContents.send('switch-tab', index);\n                });\n\n            }\n        });\n    }\n\n    public reload(): void {\n\n\n        // remove all bind\n        electronLocalshortcut.unregisterAll(this.win);\n\n        // bind again\n        this.bindAll();\n\n        // send IPC to the client\n        console.log('emit->reload-shortcuts');\n        this.win.webContents.send('reload-shortcuts');\n    }\n\n    public enable(): void {\n        if (!this.isBinded) {\n            this.bindAll()\n        } else {\n            electronLocalshortcut.enableAll(this.win);\n        }\n    }\n\n    public disable(): void {\n        electronLocalshortcut.disableAll(this.win);\n    }\n\n    public static convert(shortcut: string): string {\n        shortcut = shortcut.replace('ctrl', 'CmdOrCtrl');\n\n        return shortcut;\n    }\n}\n"]}